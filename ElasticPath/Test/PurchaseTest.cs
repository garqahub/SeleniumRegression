#region Using Statements
using System;
using System.Text;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Threading;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using System.Web;
using OpenQA.Selenium.IE;
using OpenQA.Selenium.Chrome;
using Selenium;
using System.IO;
#endregion

namespace SeleniumRegression
{


    class PurchaseTest : ParentTest
    {

        Customer customer;
        HomePage homePage;
        CategoryPage categoryPage;
        ProductListPage productListPage;
        ProductPage productPage;
        CartPage cartPage;
        SignInPage signInPage;
        CreateAccountPage createAccountPage;
        CreateAddressPage createAddressPage;
        DeliveryOptionsPage deliveryOptionsPage;
        BillingAndReviewPage billingAndReviewPage;
        ReceiptPage receiptPage;
        BillingAddressPage billingAddressPage;

        public PurchaseTest(string url, WebDriverBackedSelenium webdriver, StringBuilder verrors)
        {

            base.id = "Purchase Test";
            base.baseURL = url;
            base.selenium = webdriver;
            base.verificationErrors = verrors;



        }

        #region Test Script
        //this is the test code generated by selenium
        //****Paste test script here*****
        [Test]
        public override void RunTest()
        {
            testPurchase_US();
            //testPurchase_UK();  //address these at a later time-differences in us and other sites too great for one script
            //testPurchase_BE();
            //testPurchase_Digital();

        }
        #endregion


        public void testPurchase_US()
        {
            customer = new Customer();
            homePage = new HomePage(selenium, this);
            categoryPage = new CategoryPage(selenium, this);
            productListPage = new ProductListPage(selenium, this);
            productPage = new ProductPage(selenium, this);
            cartPage = new CartPage(selenium, this);
            signInPage = new SignInPage(selenium, this);
            createAccountPage = new CreateAccountPage(selenium, this);
            createAddressPage = new CreateAddressPage(customer, selenium, this);
            deliveryOptionsPage = new DeliveryOptionsPage(selenium, this);
            billingAndReviewPage = new BillingAndReviewPage(selenium, this);
            receiptPage = new ReceiptPage(selenium, this);
            billingAddressPage = new BillingAddressPage(selenium, this);

            homePage.openUSHomePage();
            homePage.deleteCookies();
            homePage.verifyCorrectPageIsDisplayed_US();
            homePage.browseToCategoryOnTopMenu("On the Road");

            categoryPage.clickOnSubCategory("Motorcycles");

            productListPage.clickProductLink("220");

            productPage.selectProductSku("zumo 220, North America");
            productPage.clickAddToCartButton();

            cartPage.verifyCorrectPageIsDisplayed();
            cartPage.clickCheckoutButton();

            signInPage.verifyCorrectPageIsDisplayed_US_UK();
            signInPage.clickCreateNewAccountLink();

            createAccountPage.verifyCorrectPageIsDisplayed_US_UK();
            createAccountPage.addCustomerInfo_US();

            createAddressPage.verifyCorrectPageIsDisplayed_US_UK(true);
            createAddressPage.addAddress_US();

            deliveryOptionsPage.verifyCorrectPageIsDisplayed();
            deliveryOptionsPage.clickContinueButton();

            billingAndReviewPage.verifyCorrectPageIsDisplayed();
            billingAndReviewPage.submitOrder();

            receiptPage.verifyCorrectPageIsDisplayed();
            receiptPage.verifyOrderNumberExists();

        }


        public void testPurchase_UK()
        {

            homePage.openUKHomePage();
            homePage.deleteCookies();
            homePage.verifyCorrectPageIsDisplayed_UK();
            homePage.browseToCategoryOnTopMenu("uk_On the Road");

            categoryPage.clickOnSubCategory("uk_Motorcycles");

            productListPage.clickProductLink("zÅ«mo 220, MPC");

            productPage.selectProductSku("zumo 220, North America");
            productPage.clickAddToCartButton();

            cartPage.verifyCorrectPageIsDisplayed();
            cartPage.clickCheckoutButton();

            signInPage.verifyCorrectPageIsDisplayed_US_UK();
            signInPage.clickCreateNewAccountLink();

            createAccountPage.verifyCorrectPageIsDisplayed_US_UK();
            createAccountPage.addCustomerInfo_UK();

            createAddressPage.verifyCorrectPageIsDisplayed_US_UK(true);
            createAddressPage.addAddress_UK();

            deliveryOptionsPage.verifyCorrectPageIsDisplayed();
            deliveryOptionsPage.clickContinueButton();

            billingAndReviewPage.verifyCorrectPageIsDisplayed();
            billingAndReviewPage.submitOrder();

            receiptPage.verifyCorrectPageIsDisplayed();
            receiptPage.verifyOrderNumberExists();
        }


        public void testPurchase_BE()
        {

            homePage.openBEHomePage();
            homePage.deleteCookies();
            homePage.verifyCorrectPageIsDisplayed_BE();
            homePage.browseToCategoryOnTopMenu("du_On the Road");

            categoryPage.clickOnSubCategory("du_Automotive");

            productListPage.clickProductLink("Draagtas");

            productPage.clickAddToCartButton();

            cartPage.verifyCorrectPageIsDisplayed();
            cartPage.clickCheckoutButton();

            signInPage.verifyCorrectPageIsDisplayed_BE();
            signInPage.clickCreateNewAccountLink();

            createAccountPage.verifyCorrectPageIsDisplayed_BE();
            createAccountPage.addCustomerInfo_BE();

            createAddressPage.verifyCorrectPageIsDisplayed_BE(true);
            createAddressPage.addAddress_BE();

            deliveryOptionsPage.verifyCorrectPageIsDisplayed();
            deliveryOptionsPage.clickContinueButton();

            billingAndReviewPage.verifyCorrectPageIsDisplayed();
            billingAndReviewPage.submitOrder();

            receiptPage.verifyCorrectPageIsDisplayed();
            receiptPage.verifyOrderNumberExists();
        }


        public void testPurchase_Digital()
        {

            homePage.openDigitalHomePage();
            homePage.deleteCookies();
            homePage.verifyCorrectPageIsDisplayed_US();
            homePage.browseToCategoryOnTopMenu("Maps");

            categoryPage.clickOnSubCategory("On the Road Maps");

            productListPage.clickProductLink("Trip and Waypoint Manager");

            productPage.clickAddToCartButton();

            cartPage.verifyCorrectPageIsDisplayed();
            cartPage.clickCheckoutButton();

            signInPage.verifyCorrectPageIsDisplayed_US_UK();
            signInPage.clickCreateNewAccountLink();

            createAccountPage.verifyCorrectPageIsDisplayed_US_UK();
            createAccountPage.addCustomerInfo_US();

            createAddressPage.verifyCorrectPageIsDisplayed_US_UK(true);
            createAddressPage.addAddress_US();

            billingAddressPage.verifyCorrectPageIsDisplayed();
            billingAddressPage.chooseFirstAddress();
            billingAddressPage.clickContinueButton();

            billingAndReviewPage.verifyCorrectPageIsDisplayed();
            billingAndReviewPage.submitOrder();

            receiptPage.verifyCorrectPageIsDisplayed();
            receiptPage.verifyOrderNumberExists();

        }


    }
}
