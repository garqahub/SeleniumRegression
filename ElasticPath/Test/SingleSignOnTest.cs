#region Using Statements
using System;
using System.Text;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Threading;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using System.Web;
using OpenQA.Selenium.IE;
using OpenQA.Selenium.Chrome;
using Selenium;
using System.IO;
#endregion

namespace SeleniumRegression
{
    class SingleSignOnTest : ParentTest
    {
        HomePage homePage;
        Header header;
        SignInPage signInPage;
        CreateAccountPage createAccountPage;
        ManageAccountPage manageAccountPage;
        Customer customer;
        CreateAddressPage createAddressPage;
        ShippingAddressPage shippingAddressPage;
        CategoryPage categoryPage;
        ProductListPage productListPage;
        ProductPage productPage;
        CartPage cartPage;
        DeliveryOptionsPage deliveryOptionsPage;
        BillingAndReviewPage billingAndReviewPage;
        ReceiptPage receiptPage;

        public SingleSignOnTest(string url, WebDriverBackedSelenium webdriver, StringBuilder verrors)
        {
            base.id = "Single SignOn Test";
            base.baseURL = url;
            base.selenium = webdriver;
            base.verificationErrors = verrors;


        }


        #region Test Script
        //this is the test code generated by selenium
        //****Paste test script here*****
        [Test]
        public override void RunTest()
        {
            homePage = new HomePage(selenium, this);
            header = new Header(selenium, this);
            signInPage = new SignInPage(selenium, this);
            createAccountPage = new CreateAccountPage(selenium, this);
            manageAccountPage = new ManageAccountPage(selenium, this);
            customer = createAccountPage.getCustomer();
            shippingAddressPage = new ShippingAddressPage(selenium, this);
            createAddressPage = new CreateAddressPage(customer, selenium, this);
            categoryPage = new CategoryPage(selenium, this);
            productListPage = new ProductListPage(selenium, this);
            productPage = new ProductPage(selenium, this);
            cartPage = new CartPage(selenium, this);
            deliveryOptionsPage = new DeliveryOptionsPage(selenium, this);
            billingAndReviewPage = new BillingAndReviewPage(selenium, this);
            receiptPage = new ReceiptPage(selenium, this);

            testSingleSignOn_AddAddress();
            //testSingleSignOn_Checkout();

        }
        #endregion
	

	public void testSingleSignOn_AddAddress(){
		
		homePage.openUKHomePage();
		//homePage.deleteCookies();
		homePage.openUSHomePage();
		//homePage.deleteCookies();
		homePage.verifyCorrectPageIsDisplayed_US();
		header.clickOnMyAccountLink_US_UK();
		signInPage.verifyCorrectPageIsDisplayed_US_UK();
		signInPage.clickCreateNewAccountLink();
		createAccountPage.verifyCorrectPageIsDisplayed_US_UK();
		createAccountPage.addCustomerInfo_US();
		manageAccountPage.verifyCorrectPageIsDisplayed_US_UK();
		manageAccountPage.clickAddAddressBtn_US_UK();
		createAddressPage.verifyCorrectPageIsDisplayed_US_UK(false);
		createAddressPage.checkPreferredBillingAddressBox();
		createAddressPage.addAddress_US();
		
		String userName = customer.getUserName();		
		
		homePage.openUKHomePage();
		createAccountPage.setCustomerInfo_UK();
		header.clickOnUserNameLink_US_UK(userName);
		manageAccountPage.clickAddAddressBtn_US_UK();
        createAddressPage = new CreateAddressPage(customer, selenium, this);
		createAddressPage.verifyCorrectPageIsDisplayed_US_UK(false);
		createAddressPage.addAddress_UK();
		homePage.openBEHomePage();
		homePage.verifyCorrectPageIsDisplayed_BE();
		createAccountPage.setCustomerInfo_BE();
		header.clickOnUserNameLink_BE(userName);
		manageAccountPage.clickAddAddressBtn_BE();
        createAddressPage = new CreateAddressPage(customer, selenium, this);
		createAddressPage.verifyCorrectPageIsDisplayed_BE(false);
		createAddressPage.addAddress_BE();

	}
	
	
	public void testSingleSignOn_Checkout()
    {
		
		homePage.openBEHomePage();
		//homePage.deleteCookies();
		homePage.openUSHomePage();
		homePage.deleteCookies();
		header.clickOnMyAccountLink_US_UK();
        signInPage.verifyCorrectPageIsDisplayed_US_UK();
		signInPage.clickCreateNewAccountLink();
        createAccountPage.verifyCorrectPageIsDisplayed_US_UK();
		createAccountPage.addCustomerInfo_US();
		manageAccountPage.clickAddAddressBtn_US_UK();
		createAddressPage.verifyCorrectPageIsDisplayed_US_UK(false);
		createAddressPage.checkPreferredBillingAddressBox();
		createAddressPage.addAddress_US();

		homePage.openBEHomePage();
		homePage.verifyCorrectPageIsDisplayed_BE();
		homePage.browseToCategoryOnTopMenu("du_On the Road");
		categoryPage.clickOnSubCategory("du_Automotive");
		productListPage.clickProductLink("Draagtas");
		productPage.clickAddToCartButton();
		cartPage.clickCheckoutButton();
		shippingAddressPage.selectNewAddressOption();
        createAddressPage = new CreateAddressPage(customer, selenium, this);
		createAddressPage.verifyCorrectPageIsDisplayed_BE(true);
		createAddressPage.addAddress_BE();
		deliveryOptionsPage.clickContinueButton();
		billingAndReviewPage.verifyCorrectPageIsDisplayed();
		billingAndReviewPage.submitOrder();
		receiptPage.verifyCorrectPageIsDisplayed();
		receiptPage.verifyOrderNumberExists();
	}


    }
}
