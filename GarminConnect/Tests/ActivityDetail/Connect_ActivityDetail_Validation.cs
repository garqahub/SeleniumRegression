#region Test Information
/*
* Test Name: Connect Activity Detail Validation
* Author: Michael Schultz
* Purpose/Description: Validate that the details are showing 
* Creation Date: 03/29/12
* Version:  1.0
* Updated By:
* Updated Date:
*/
#endregion

#region Using Statements
using System;
using System.Text;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Threading;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using System.Web;
using OpenQA.Selenium.IE;
using OpenQA.Selenium.Chrome;
using System.Drawing;
using Selenium;
#endregion


namespace SeleniumRegression
{
    //****Enter in desired test name in replace of EnterClassName****
    class Connect_ActivityDetail_Validation : ParentTest
    {
        ConnectUtility utility;
        public Connect_ActivityDetail_Validation(string url, WebDriverBackedSelenium webdriver, StringBuilder verrors)
        {
            //****Enter in Script Name here****  
            base.id = "Activity Detail Validation";  //Enter Test Name
            base.baseURL = url;  //Be sure to update the selenium.Open command with baseURL
            base.selenium = webdriver;
            base.verificationErrors = verrors;
            base.quality = new QualityCheck(this);
            base.description = "**Go to the Activity Detail and validate all numbers are reporting properly.**";
            utility = new ConnectUtility(this);
            base.username = "staticuser";
            base.password = "test1!";

        }

        #region Test Script
        //this is the test code generated by selenium
        //****Paste test script here*****
        public override void RunTest()
        {

            selenium.Open(base.baseURL);
            utility.SignIn(username, password);
            quality.Click("link=E Workout");
            Thread.Sleep(3000);
            //quality.Click("link=B Workout");
            quality.IsTextPresent("Distance:");
            quality.IsTextPresent("10.92 mi");
            quality.IsTextPresent("Time:");
            quality.IsTextPresent("2:08:32");
            quality.IsTextPresent("Avg Pace:");
            quality.IsTextPresent("11:46 min/mi");
            quality.IsTextPresent("Elevation Gain:");
            quality.IsTextPresent("96 ft");

            quality.IsTextPresent("Moving Time:");
            quality.IsTextPresent("2:06:06");
            quality.IsTextPresent("Elapsed Time:");
            quality.IsTextPresent("2:08:33");
            quality.IsTextPresent("Avg Moving Pace:");
            quality.IsTextPresent("11:33 min/mi");
            quality.IsTextPresent("Best Pace:");
            quality.IsTextPresent("7:33 min/mi");
            quality.IsTextPresent("Elevation Gain:");
            quality.IsTextPresent("96 ft");
            quality.IsTextPresent("Elevation Loss:");
            quality.IsTextPresent("3,095 ft");
            quality.IsTextPresent("MinElevation:");
            quality.IsTextPresent("4,634 ft");
            quality.IsTextPresent("MaxElevation:");
            quality.IsTextPresent("7,633 ft");
            quality.IsTextPresent("Avg HR:");
            quality.IsTextPresent("130 bpm");
            quality.IsTextPresent("Max HR:");
            quality.IsTextPresent("155 bpm");
            quality.IsTextPresent("Calories");
            quality.IsTextPresent("841 C");


            utility.SignOut();
        }
        #endregion


    }


}
