#region Test Information
/*
* Test Name:
* Author:
* Purpose/Description:
* Creation Date:
* Version: 
* Updated By:
* Updated Date:
*/
#endregion

#region Using Statements
using System;
using System.Text;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Threading;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using System.Web;
using OpenQA.Selenium.IE;
using OpenQA.Selenium.Chrome;
using System.Drawing;
using Selenium;
#endregion


namespace SeleniumRegression
{
    //****Enter in desired test name in replace of EnterClassName****
    class Connect_Dashboard_ActivityNameTabs : ParentTest
    {
        ConnectUtility utility;
        public Connect_Dashboard_ActivityNameTabs(string url, WebDriverBackedSelenium webdriver, StringBuilder verrors)
        {
            //****Enter in Script Name here****  
            base.id = "Connect_Dashboard_ActivityNameTabs";  //Enter Test Name
            base.baseURL = url;  //Be sure to update the selenium.Open command with baseURL
            base.selenium = webdriver;
            base.verificationErrors = verrors;
            base.quality = new QualityCheck(this);
            base.description = "**Edit the names on the dashboard for the 2-5 tabs**";
            quality = new QualityCheck(this);
            utility = new ConnectUtility(this);
        }

        #region Test Script
        //this is the test code generated by selenium
        //****Paste test script here*****
        public override void RunTest()
        {
            string name;
            selenium.Open(base.baseURL);
            utility.SignIn("gctestuser001", "test1!");
            quality.Click("id=activityLink2");
            Thread.Sleep(10000);
            selenium.Click("css=#activityData2 > div.calendarPopupFooter > div.footerAction.quickEdit > a");
            Thread.Sleep(2000);
            quality.Type("id=activityNameInput2", "TestActivity2");
            Thread.Sleep(2000);
            quality.Click("id=activityNameInput2");
            quality.Click("css=#activityData2 > div.calendarPopupFooter > div.footerAction.quickEditDone > a");
            Thread.Sleep(2000);
            name = quality.GetValue("id=activityNameInput2");
            if (name == "TestActivity2")
            {
                passedcheck++;
            }
            else
            {
                failedcheck++;
                quality.ErrorReport("TestActivity2", CheckType.Equal);
            }
            quality.Click("id=activityLink3");
            Thread.Sleep(6000);
            quality.Click("css=#activityData3 > div.calendarPopupFooter > div.footerAction.quickEdit > a");
            quality.Type("id=activityNameInput3", "TestActivity3");
            Thread.Sleep(2000);
            quality.Click("id=activityNameInput3");
            quality.Click("css=#activityData3 > div.calendarPopupFooter > div.footerAction.quickEditDone > a");
            Thread.Sleep(2000);
            name = quality.GetValue("id=activityNameInput3");
            if (name == "TestActivity3")
            {
                passedcheck++;
            }
            else
            {
                failedcheck++;
                quality.ErrorReport("TestActivity3", CheckType.Equal);
            }
            quality.Click("id=activityLink4");
            Thread.Sleep(6000);
            quality.Click("css=#activityData4 > div.calendarPopupFooter > div.footerAction.quickEdit > a");
            quality.Type("id=activityNameInput4", "TestActivity4");
            Thread.Sleep(2000);

            quality.Click("css=#activityData4 > div.calendarPopupFooter > div.footerAction.quickEditDone > a");
            Thread.Sleep(2000);
            quality.Click("id=activityNameInput4");
            name = quality.GetValue("id=activityNameInput4");
            if (name == "TestActivity4")
            {
                passedcheck++;
            }
            else
            {
                failedcheck++;
                quality.ErrorReport("TestActivity4", CheckType.Equal);
            }
            quality.Click("id=activityLink5");
            Thread.Sleep(6000);
            quality.Click("css=#activityData5 > div.calendarPopupFooter > div.footerAction.quickEdit > a");
            quality.Type("id=activityNameInput5", "TestActivity5");
            Thread.Sleep(2000);
            quality.Click("id=activityNameInput5");
            quality.Click("css=#activityData5 > div.calendarPopupFooter > div.footerAction.quickEditDone > a");
            Thread.Sleep(2000);
            name = quality.GetValue("id=activityNameInput5");
            if (name == "TestActivity5")
            {
                passedcheck++;
            }
            else
            {
                failedcheck++;
                quality.ErrorReport("TestActivity5", CheckType.Equal);
            }

            utility.SignOut();
        }
        #endregion


    }


}
