#region Test Information
/*
* Test Name:
* Author:
* Purpose/Description:
* Creation Date:
* Version: 
* Updated By:
* Updated Date:
*/
#endregion

#region Using Statements
using System;
using System.Text;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using System.Threading;
using System.Linq;
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Support.UI;
using System.Web;
using OpenQA.Selenium.IE;
using OpenQA.Selenium.Chrome;
using System.Drawing;
using Selenium;
#endregion


namespace SeleniumRegression
{
    //****Enter in desired test name in replace of EnterClassName****
    class Kenwood_ForgotUsername_ValidationTest : ParentTest
    {
        KenwoodFunctions ken;
        public Kenwood_ForgotUsername_ValidationTest(string url, WebDriverBackedSelenium webdriver, StringBuilder verrors)
        {

            //****Enter in Script Name here****  
            base.id = "Forgot Username Validation";  //Enter Test Name
            base.baseURL = url;  //Be sure to update the selenium.Open command with baseURL
            base.selenium = webdriver;
            base.verificationErrors = verrors;
            base.quality = new QualityCheck(this);
            ken = new KenwoodFunctions(quality, selenium);
            base.description = "**Validate Forgot username functions**";
        }

        #region Test Script
        //this is the test code generated by selenium
        //****Paste test script here*****
        public override void RunTest()
        {
            selenium.Open(base.baseURL);

            ken.WelcomePage();

            quality.Click("link=Sign In");
            quality.WaitForPageToLoad("30000");

            // comment: Validate the Sign In page
            ken.SignInPage();

            // comment: Forgot Username
            quality.Click("link=Forgot username");
            quality.WaitForPageToLoad("30000");

            ken.ForgotUsernamePage();

            // comment: Click the "Product Support"
            quality.Click("link=Product Support.");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Support", quality.GetTitle());

            quality.Click("link=Sign In");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Sign In", quality.GetTitle());
            quality.Click("link=Forgot username");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());

            // comment: Click submit with out entering 
            quality.Click("css=a.button > span");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());
            quality.AreEqual("E-mail Address is required", quality.GetText("css=ul.error > li"));

            // comment: Enter a invalid email address 
            quality.Type("id=email", "sadsddsdsdsadsdsadsdsdsdsdsdsad");
            quality.Click("css=a.button > span");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());
            quality.AreEqual("E-mail Address is invalid", quality.GetText("css=ul.error > li"));

            // comment: Enter more than 50 characters as an invalid email address 
            quality.Type("id=email", "as!@#!@# 21sasdasdasadasdadaaasdadassasdasdasadasdadaaasdad\\");
            quality.Click("css=a.button > span");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());
            quality.AreEqual("The maximum length of E-mail Address is 50 characters", quality.GetText("css=ul.error > li"));
            quality.AreEqual("E-mail Address is invalid", quality.GetText("//div[@id='bd']/div[3]/ul/li[2]"));

            // comment: Enter a non existing email address 
            quality.Type("id=email", "ssdsadsadas@sadsdsd.com");
            quality.Click("css=a.button > span");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());
            quality.AreEqual("Unable to find your account information in our records", quality.GetText("css=ul.error > li"));

            // comment: Enter a valid email
            quality.Type("id=email", "radu.tighineanu@garmin.com");
            quality.Click("css=a.button > span");
            quality.WaitForPageToLoad("30000");
            quality.AreEqual("Forgot Username", quality.GetTitle());
            quality.AreEqual("We have sent your username to your email address.", quality.GetText("css=div.confirmationDialog-mid"));
            
        }
        #endregion


    }


}
